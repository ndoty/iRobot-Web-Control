{
  "name": "create-oi",
  "version": "0.0.4",
  "description": "iRobot Create Open Interface (OI) library",
  "main": "bin/main.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "buster test"
  },
  "repository": "",
  "keywords": [
    "robot",
    "create",
    "irobot"
  ],
  "dependencies": {
    "serialport": ">= 0.2.0",
    "q": ">= 0.8.0"
  },
  "author": {
    "name": "Jeff Rousseau",
    "email": "jroussea@cs.uml.edu"
  },
  "license": "GPL",
  "readmeFilename": "README.md",
  "readme": "create-oi: iRobot Create&#174; driver for node\n========================================\n\nAn API for interacting with an iRobot Create. Because robots are fun.\n\n---\nThe iRobot Create provides a low-level serial protocol called the \"Open Interface\" (OI) documented [here](http://www.irobot.com/filelibrary/pdfs/hrd/create/Create%20Open%20Interface_v2.pdf).\nWhat this library attempts to do is implement a simple and intuitive API on top of OI in [node.js](http://nodejs.org/) using the great [serialport](https://github.com/voodootikigod/node-serialport) library.\n\nPrerequisites\n-------------\n * iRobot Create\n * Installed usb-serial drivers and connected laptop, Raspberry Pi, Gumstix or similarly node-capable machine to your Create\n   * see: [Windows installation instructions](http://homesupport.irobot.com/app/answers/detail/a_id/362/~/installing-the-usb-serial-port) if using a windows laptop (linux comes with drivers, macs will need [FTDI drivers](http://www.ftdichip.com/Drivers/D2XX.htm))\n * node and npm are installed (on above machine)\n\nInstallation\n------------\n```sh\nnpm install create-oi\n```\n\nGetting Started\n-----\nAfter plugging in your Create USB cable you'll need to find \nout what serial port your operating system has assigned your Create.\n\nOn linux:\n```sh\n$ dmesg | grep tty\n```\nOn a mac:\n```sh\n$ ls /dev/tty.*\n```\nOn a windows box, open device manager and look under \"Ports\":\n```bat\nC:\\> mmc devmgmt.msc\n```\n\nIn your code you'll probably want to start with these two lines:\n```javascript\nvar robot = require(\"create-oi\");\n\nrobot.init({ serialport: \"/dev/tty.usbserial-A2001nf6\" });\n```\nMake sure to set your `serialport` to the device name you found earlier. \nOn my mac for me this is `\"/dev/tty.usbserial-A2001nf6\"`. Yours _will_ be different.\n\nThe API is event-based, meaning all the important stuff happens in event callbacks.\nThe first event you'll need to deal with is the `ready` event which gets fired when\nthe module sucessfully connects to the Create over the serial port. Note that the \n`this` context for all your callback handlers will be set to the `create-oi` module \nitself, so you can easily call `drive`, `rotate` or any other module method within a \ncallback. Several events such as `bump` or `wheeldrop` will contain information about \nwhich specific sensor was triggered inside the event parameter passed into your \ncallback function.\n\n```javascript\nrobot.on('ready', function() {\n    // twirl towards freedom\n    this.rotate(100);\n});\n\nrobot.on('bump', function(bumpEvent) {\n    console.log(bumpEvent.direction);\n    ...\n});\n```\n\nExamples\n--------\nWorking examples (provided you change the serial port) can be found in the examples directory.\n\nAPI Docs\n--------\nSee the [API Reference](https://github.com/drzaiusx11/create-oi/wiki/API-Reference) on the wiki.\n",
  "_id": "create-oi@0.0.4",
  "_from": "create-oi@"
}
